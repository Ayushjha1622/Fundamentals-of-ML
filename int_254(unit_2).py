# -*- coding: utf-8 -*-
"""INT-254(unit-2)

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1u17ewD-wcodY88UI280B_s81TJEojswk
"""

import pandas as pd
import numpy as np

df=pd.read_csv('Salaries.csv')
print(df)

df.shape

df.head()

df.head(10)

df.tail(10)

df['salary'].dtype

df.dtypes

df.columns

df['rank']

#data frames attributes
#dtpes, columns, axes, size, shape, values

#Data frame methods
#head, tail, describe, maax/min, std(), sample, dropna

df.describe()

df.head(50).mean()

df['salary'].count()

distance=[1,2,3,5,4,6];
time=[1,1,2,4,3,4];

import numpy as np

np_distance=np.array(distance)
np_time=np.array(time)
np_speed=np_distance/np_time

np_speed

np_city=np.array(["abc","la","knp","utk"])
np_city.ndim

np_city_with_state=np.array([["abc","jh","djf","dbn"],["abc","jh","djf","dbn"]])
np_city_with_state

np_city_with_state.ndim

first_trial_cyclist=[12,34,56]
second_trial_cyclist=[67,78,97]

np_first_trial_cyclist=np.array(first_trial_cyclist)
np_second_trial_cyclist=np.array(second_trial_cyclist)

total_distance=np_first_trial_cyclist+np_second_trial_cyclist
total_distance

cyclist_trails=np.array([[10,14,23,45],[23,45,67,89]])
cyclist_trails.shape

first_trail=cyclist_trails[0]
first_trail

second_trail=cyclist_trails[1]
second_trail

first_cyclist_all_trails=cyclist_trails[:,0] #slicing operator=(:)
first_cyclist_all_trails

two_cyclist_trails_data=cyclist_trails[:,0:2]
two_cyclist_trails_data

for i in cyclist_trails:
  print(i)

test_scores=np.array([[1,2,3,4],[4,6,7,8]])
pass_score=test_scores

test_scores=np.array([[83,71,65,45],[54,68,78,23]])

pass_score=test_scores>60

print(pass_score)

test_scores[pass_score]

np_city=np.array(['NYC','LA','Miami','Houston'])

np_city

new_np_city=np_city

new_np_city

new_np_city is np_city

view_of_new_np_city=new_np_city.view()

len(view_of_new_np_city)

view_of_new_np_city[3]='Central'

view_of_new_np_city

new_np_city

copy_of_new_np_city=new_np_city.copy()

copy_of_new_np_city is new_np_city

np_sqrt=np.sqrt([16,4,9])

print(np_sqrt.astype(int))

np.cos(0)

from numpy import pi

np.sin(np.pi/2)

np.cos(pi)

np.floor([1.5, 2.6, 3.6]).astype(int)

np.exp([0,1,2])

cyclist_trails

new_oneD_array=cyclist_trails.flatten()
new_oneD_array

new_oneD_array.ndim

new_oneD_array.reshape(4,2)

np.hsplit(new_oneD_array, 2)

np.hstack((new_oneD_array,new_oneD_array))

